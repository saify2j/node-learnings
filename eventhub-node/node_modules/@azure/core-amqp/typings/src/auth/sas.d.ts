/// <reference types="node" />
import { AccessToken } from "@azure/core-auth";
/**
 * @class SharedKeyCredential
 * Defines the SharedKeyCredential .
 */
export declare class SharedKeyCredential {
    /**
     * @property {string} keyName - The name of the EventHub/ServiceBus key.
     */
    keyName: string;
    /**
     * @property {string} key - The secret value associated with the above EventHub/ServiceBus key.
     */
    key: string;
    /**
     * Initializes a new instance of SharedKeyCredential
     * @constructor
     * @param {string} keyName - The name of the EventHub/ServiceBus key.
     * @param {string} key - The secret value associated with the above EventHub/ServiceBus key
     */
    constructor(keyName: string, key: string);
    /**
     * Gets the sas token for the specified audience
     * @param {string} [audience] - The audience for which the token is desired.
     */
    getToken(audience: string): AccessToken;
    /**
     * @protected
     * Creates the sas token based on the provided information
     * @param {string | number} expiry - The time period in unix time after which the token will expire.
     * @param {string} [audience] - The audience for which the token is desired.
     * @param {string | Buffer} [hashInput] The input to be provided to hmac to create the hash.
     */
    protected _createToken(expiry: number, audience: string, hashInput?: string | Buffer): AccessToken;
    /**
     * Creates a token provider from the EventHub/ServiceBus connection string;
     * @param {string} connectionString - The EventHub/ServiceBus connection string
     */
    static fromConnectionString(connectionString: string): SharedKeyCredential;
}
//# sourceMappingURL=sas.d.ts.map